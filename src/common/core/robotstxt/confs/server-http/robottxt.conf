{%- if USE_ROBOTSTXT == "yes" -%}
location = /robots.txt {
	default_type 'text/plain; charset=utf-8';
	root /usr/share/bunkerweb/core/robotstxt/files;
	content_by_lua_block {
		local logger   = require "bunkerweb.logger":new("ROBOTSTXT")
		local helpers  = require "bunkerweb.helpers"

		local ngx      = ngx
		local ERR      = ngx.ERR
		local INFO     = ngx.INFO
		local fill_ctx = helpers.fill_ctx
		local save_ctx = helpers.save_ctx
		local tostring = tostring

		local ok, ret, errors, ctx = fill_ctx()
		if not ok then
			logger:log(ERR, "fill_ctx() failed : " .. ret)
		elseif errors then
			for i, error in ipairs(errors) do
				logger:log(ERR, "fill_ctx() error " .. tostring(i) .. " : " .. error)
			end
		end
		local robotstxt  = require "robotstxt.robotstxt":new(ctx)
		local ret      = robotstxt:content()
		if not ret.ret then
			logger:log(ERR, "robotstxt:content() failed : " .. ret.msg)
		else
			logger:log(INFO, "robotstxt:content() success : " .. ret.msg)
		end
		save_ctx(ctx)
	}
}
{%- endif %}
